<apex:page controller="CntrlVfCallJs" sidebar="false">
    <script type="text/javascript">
        /**
         * @description 확인dialog 표시
         */
        function checkConfirm() {
            if(confirm('javascript 호출 테스트')){
                return true;
            }
            return false;
        }
        /**
         * @description 확인dialog 표시
         */
        function callApexVarMethod() {
            // Visualforce에 지정한 Apex 변수를 javscript 내에서 습득(apex:inputHidden에 지정한 id 속성으로 대상을 지정)
            var myVar = document.getElementById('{!$Component.form.myVar}').value;
            // 역으로, Apex 변수의 내용을 변경하는 것도 가능
            // document.getElementById('{!$Component.form.myVar}').value = 'Bye World';

            // Apex 메서드 실행(apex:actionFunction에 지정한 name 속성으로 대상을 지정)
            myMthd();
        }
    </script>

    <apex:form id="form">
        <!-- 1. 확인 dialog 표시 -->
        <apex:pageBlock title="확인 dialog 표시">

            <apex:commandButton value="JS호출" onclick="checkConfirm()"/>
            <!-- 아래의 방법으로도 javascript 코드 실행 가능 -->
            <!-- <apex:commandButton value="JS호출" onclick="if(confirm('javascript 호출 테스트')){return true;}; return false;"/> -->
        </apex:pageBlock>

        <!-- 2. Apex 변수 및 메서드 호출 -->
        <!-- Apex 변수 지정 -->
        <apex:inputHidden id="myVar" value="{!myVariable}"/>
        <!-- Apex 메서드 지정 -->
        <apex:actionFunction name="myMthd" action="{!myMethod}"/>

        <apex:pageBlock title="Apex 변수 및 메서드 호출">
            <!-- 화면 메시지 표시란 -->
            <apex:pageMessages id="messagearea" showDetail="false"/>

            <apex:commandButton value="JS호출" oncomplete="callApexVarMethod()"/>
        </apex:pageBlock>
    </apex:form >
</apex:page>